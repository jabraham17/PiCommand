
//plugins
plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'eclipse'
    id "com.google.protobuf" version "0.8.3"
}


// In this section you declare where to find the dependencies of your project
repositories {
    //jcenter()
    mavenCentral()
}

dependencies {
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // Use JUnit test framework
    //testCompile 'junit:junit:4.12'
}

protobuf {
    //config compiler
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    //put it in sources direcrory
    generateProtoTasks.generatedFilesBaseDir = 'generated'
}

// Define the main class for the application
mainClassName = 'Main'
def projectName = rootProject.name

jar {
    manifest {
        attributes 'Main-Class': "main.${mainClassName}"
    }
    baseName = projectName
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

def outputDirectory = file("${rootDir}/output")

task writeExecuteScript() {
    dependsOn jar
    doLast {
        def runFile = new File("${buildDir}/run${projectName}.sh")
        runFile.write "java -jar ${projectName}.jar \"\$@\""
    }
}

task copyToOutput(type: Copy) {
    dependsOn jar
    dependsOn writeExecuteScript
    destinationDir = outputDirectory
    from(file(jar.archivePath)) {
    }
    from(file("${buildDir}/run${projectName}.sh")) {
    }
}

build {
    dependsOn copyToOutput
}

clean {
    delete outputDirectory
}
